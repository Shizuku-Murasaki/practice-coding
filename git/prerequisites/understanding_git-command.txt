git commandの理解
_____________________________________________________________________________________________
・clone
既存のリポジトリをターゲットとして使用する。ターゲットリポジトリのクローンまたはコピーを作成する。
-git clone [リポジトリ] [ディレクトリ]
∟リモートリポジトリとディレクトリを指定してコマンドを実行する
-git clone [リポジトリ]
∟リポジトリだけ指定して、ディレクトリを指定しないこともできる。そうすると直下にリポジトリがクローンされる。

https://eng-entrance.com/git-clone
_____________________________________________________________________________________________
・branch
ブランチを新規作成、削除、一覧するためのコマンド。
-git branch <branchname>
∟現在のHEADから、指定したbranchnameを名前として、新しいブランチを作成する。
-git branch
∟ローカルブランチの一覧を表示する。
-git branch -r
∟リモートブランチの一覧を表示する。

https://qiita.com/chihiro/items/e178e45a7fd5a2fb4599
_____________________________________________________________________________________________
・checkout
今作業しているブランチから退出して、新たに他の作業ブランチで作業をしたい場合に使用する
-git checkout <branchname>
∟ワークツリーの内容を指定したブランチに切り替える
-git checkout -p
∟一つ一つの差分を確認しながらチェックアウトを進める
-git chechout -q
∟メッセージを表示せずに実行する

https://atmarkit.itmedia.co.jp/ait/articles/2004/24/news028.html
_____________________________________________________________________________________________
・log
git logは今までのコミット履歴を確認することのできるコマンド。
logは今までしたコミットをコミットメッセージの一覧という形で表示。
そのためgit logをした際に一目で何をしたのかわかるようなコミットメッセージを書く必要がある。
-git log
∟コミットログを全て表示する
-git log -10
∟最新10件分のコミットログを表示する
-git --graph
∟ログとともに、枝分かれやマージの様子を示すグラフを表示する
_____________________________________________________________________________________________
https://atmarkit.itmedia.co.jp/ait/articles/2004/09/news018.html

・status
-git status
∟git add されているけどまだ git commit されていないファイルの一覧
　編集・変更・削除されているが、まだ git add されていないファイルの一覧
　Git管理されていない、かつ .gitignore で管理除外対象にもされていないものの一覧
-git status -s
∟短い書式で表示する

https://qiita.com/tommy_aka_jps/items/af536a7c20747f99aa42
_____________________________________________________________________________________________
・add
git add は、作業ディレクトリ内の変更をステージングエリアに追加するコマンドである。このコマンドは、個々のファイルのアップデート内容を次回コミット対象とするよう、Git に指示する。ただし、実際には git add コマンドだけではリポジトリに何も影響しない。git commit コマンドを実行するまで、変更が実際に記録されることはない。
-git add ファイル名
∟指定したファイルの変更内容をインデックスに追加し、「git commit」の対象にする
-git add -a
∟Gitで管理していないファイルも含めてインデックスに追加する

https://www-creators.com/git-command/git-add
_____________________________________________________________________________________________
・commit
ワークツリー（作業ディレクトリ）で編集した結果をリポジトリに反映する操作が「コミット」である。「git add」コマンドでコミットしたいファイルを「インデックス」あるいは「ステージングエリア」と呼ばれる領域に追加する。インデックスにはファイルの変更箇所などが記録され、「git commit」コマンドでローカルリポジトリにコミットされる。
-git commit
∟インデックスに追加した変更をリポジトリに記録する
-git -m メッセージ
∟コミットメッセージを指定する

https://atmarkit.itmedia.co.jp/ait/articles/2003/19/news018.html
_____________________________________________________________________________________________
・diff
コミット同士やコミットと作業ツリーの内容を比較する。
「(4)最終コミットと現状を比較し、差分を取れるようにする」にて詳細を記載。
_____________________________________________________________________________________________
・push
リモートリポジトリに自分の変更履歴がアップロードされて、リモートリポジトリ内の変更履歴がローカルリポジトリの変更履歴と同じ状態になる。
-git push
∟ローカルリポジトリの変更内容をリモートリポジトリに送信する

https://atmarkit.itmedia.co.jp/ait/articles/2005/21/news023.html
_____________________________________________________________________________________________
・pull
他のリポジトリ（リモートリポジトリなど）のデータを取得し、ローカルのブランチに統合する。このコマンドが実行されると、リモート・リポジトリからの変更が現在のブランチに組み込まれる。（「fetch」と「merge」を行う）
-git pull
∟リモートリポジトリで変更された内容を全て取得し、現在の作業ツリーに反映する
-git pull [リポジトリ] [ブランチ]
∟リモートリポジトリの内容を取得し、指定したリポジトリのブランチに取り込む
-git pull origin master
∟デフォルトブランチの変更内容を取り込む

https://atmarkit.itmedia.co.jp/ait/articles/2003/06/news019.html
_____________________________________________________________________________________________
・fetch
リモートリポジトリの最新の履歴の取得だけを行うことができる。取得したコミットは、名前の無いブランチとして取り込まれる。このブランチはFETCH_HEADという名前でチェックアウトすることができる。
リモートから最新情報をローカルに持ってくるが、場所は「master」ブランチではなく、「origin/master」ブランチに取り込まれる。
「master」ブランチ…ローカルの中心となる統合ブランチで、他のローカルの作業ブランチと繋がったもの。
「origin/master」ブランチ…ローカルにある、リモートのmasterブランチを追跡するリモート追跡ブランチ。
-git fetch 
∟リモートリポジトリの内容をローカルリポジトリに反映する。ワークツリーには反映されない。
-git fetch origin
∟リモートリポジトリにあるすべてのブランチの最新情報を、追跡ブランチに取得する
-git fetch --all
∟リモートリポジトリのすべての最新をフェッチする

https://pointsandlines.jp/env-tool/git-fetch-pull
https://qiita.com/wann/items/688bc17460a457104d7d
_____________________________________________________________________________________________
・merge
現在のブランチ(HEADの指している場所)へ、他のブランチの更新を取り込む処理
-git merge <ブランチ名>
∟<ブランチ名> はマージ先のブランチにマージするブランチの名前にする。

https://www.sejuku.net/blog/71003
